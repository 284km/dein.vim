*dein.txt*	Dark powered Vim/Neovim plugin manager

Version: 0.0
Author:  Shougo <Shougo.Matsu at gmail.com>
License: MIT license  {{{
    Permission is hereby granted, free of charge, to any person obtaining
    a copy of this software and associated documentation files (the
    "Software"), to deal in the Software without restriction, including
    without limitation the rights to use, copy, modify, merge, publish,
    distribute, sublicense, and/or sell copies of the Software, and to
    permit persons to whom the Software is furnished to do so, subject to
    the following conditions:
    The above copyright notice and this permission notice shall be included
    in all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
    OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
    MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
    IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
    CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
    TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
    SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
}}}

CONTENTS					*dein-contents*

Introduction		|dein-introduction|
Usage			|dein-usage|
Install			|dein-install|
Interface		|dein-interface|
  Functions		  |dein-functions|
  Variables		  |dein-variables|
  Options		  |dein-options|
Configuration Examples	|dein-examples|
FAQ			|dein-faq|

==============================================================================
INTRODUCTION					*dein-introduction*

==============================================================================
USAGE						*dein-usage*

==============================================================================
INSTALL						*dein-install*

==============================================================================
INTERFACE					*dein-interface*

------------------------------------------------------------------------------
FUNCTIONS 					*dein-functions*

dein#begin({base-path})				*dein#begin()*
		Initialize dein.vim and start plugins configuration
		block.
		{base-path} is where your downloaded plugins will be placed.

		Note: You must not call the function inside a
		"has('vim_starting')" block.

		Note: It executes ":filetype off" automatically.
>
dein#end()					*dein#end()*
		End dein configuration block.
		Note: 'runtimepath' is changed after |dein#end()|.
		You must not use the plugins in |dein#begin()| block.

dein#add({repo}[, {options}])			*dein#add()*
		Initialize a plugin.
		{repo} is the repository URI.  See |dein-options| for what to
		set in {options}.
		Note: You must call it in |dein#begin()| block.

dein#update([{plugins}])			*dein#update()*
		Install/Update the plugins.
		{plugins} is the plugins name list.
		If you omit it, dein will update all plugins.

		Note: It is not asynchronous currently.

dein#check_install([{plugins}])			*dein#check_install()*
		Check the plugins installation.
		If the plugins are not installed, it will return non zero.
		{plugins} is the check of the plugins name list.
		If you omit it, dein will check all plugins installation.

dein#source([{plugins}])			*dein#source()*
		|:source|  the plugins specified by {plugins}.
		{plugins} is the plugins name list.
		If you omit it, dein will source all plugins.

dein#get({plugin-name})				 *dein#get()*
		Get the plugin options dictionary for {plugin-name}.

------------------------------------------------------------------------------
VARIABLES 					*dein-variables*

					*g:dein#types#git#command_path*
g:dein#types#git#command_path
		The "git" command path used for git type.

		Defaults: "git"

					*g:dein#types#git#default_protocol*
g:dein#types#git#default_protocol
		The default protocol used for git (github).
		Note: It is only accepted in "https" or "ssh".

		Defaults: "https"

					*g:dein#types#git#clone_depth*
g:dein#types#git#clone_depth
		The default history depth for "git clone".
		If it is 1, dein will use shallow clone feature.
		See |dein-options-type__depth|.

		Defaults: 0

					*g:dein#types#git#pull_command*
g:dein#types#git#pull_command
		The git command used to pull updates.

		Defaults: "pull --ff --ff-only"

------------------------------------------------------------------------------
OPTIONS 					*dein-options*
		The {options} accepts the following keys:

						*dein-options-name*
		name		(String)
		Specify the name of the plugin.  This is used for dein
		management and other functions.  If it is omitted, the tail of
		the repository name will be used.
		Note: Must be unique across the all plugin.  If the plugin
		name conflicts with another plugin, dein will overwrite the
		previous settings with the new one.  If the repo tail is bound
		to conflict, you can set the "name" option manually to prevent
		overwriting an existing plugin setting.

						*dein-options-rtp*
		rtp		(String)
		Specify the runtime path.
		You can use it when the repository has the Vim plugin in a
		subdirectory.
		For example: https://github.com/rstacruz/sparkup
		If it is empty string, dein will not add the path to
		'runtimepath'

		Example:
>
		call dein#add('rstacruz/sparkup', {'rtp': 'vim'})
<
						*dein-options-directory*
		directory	(String)
		Specify relative directory path from the base directory (set
		by |dein#begin()| or "base" option). If omitted, the "name"
		option will be used.
		Note: If you set rev "foo" when the name key is "dein",
		the directory key is "dein_foo".

		Example:
>
		call dein#add('https://github.com/Shougo/unite.vim.git',
		   \ {'directory' : 'unite'})
<
						*dein-options-depends*
		depends		(List or String)
		Specify a list of plugins a plugin depends on.
		List items are '{plugin-name}'.
		Those specified in the list are NOT installed automatically.

						*dein-options-if*
		if		(Number) or (String)
		If set to zero, dein doesn't register the plugin.
		If it is String, dein will eval it.
		If you don't set it, dein will register the plugin.

						*dein-options-lazy*
		lazy		(Number)
		If set to non-zero, dein doesn't add the path to 'runtimepath'
		automatically.
		If you don't set it, dein will set it automatically when the
		conditions are met.

						*dein-options-on_i*
		on_i		(Number)
		If set to non-zero, dein will call |dein#source()| on
		|InsertEnter| autocmd.

						*dein-options-on_ft*
		on_ft		(List) or (String)
		If it is matched to 'filetype', dein will call |dein#source()|.

						*dein-options-on_path*
		on_path		(List) or (String)
		If set to ".*", dein will call |dein#source()| on editing all
		files.  Otherwise, dein will call |dein#source()| if the
		buffer name is matched the string pattern.
		Note: It is useful for explorer behavior plugins.
		Ex: vimfiler, metarw, vim-gnupg ...

						*dein-options-on_func*
		on_func		(List) or (String)
		If it is matched to the called function, dein will call
		|dein#source()|.

						*dein-options-on_source*
		on_source	(List) or (String)
		Load the plugin after the list plugins are loaded.

==============================================================================
EXAMPLES					*dein-examples*
>
	if &compatible
	  set nocompatible
	endif
	set runtimepath^={path to dein.vim directory}

	call dein#begin(expand('~/.cache/dein'))

	call dein#add('Shougo/dein.vim', 'rtp': '')
	call dein#add('Shougo/neocomplete.vim')
	...

	call dein#end()

	filetype plugin indent on
<
==============================================================================
FAQ						*dein-faq*

Q: Where is |:NeoBundleFetch|?

A: You can use |dein-options-rtp|. >
	call dein#add('Shougo/dein.vim', {'rtp': ''})

==============================================================================
vim:tw=78:ts=8:ft=help:norl:noet:fen:
